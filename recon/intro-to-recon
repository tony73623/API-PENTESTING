Introduction to API Reconnaissance
API Reconnaissance

Introduction

In order to target APIs effectively, it's essential to first locate them. In this module, we will explore techniques for uncovering the API attack surface of a target using both passive and active reconnaissance methods.

The accessibility of an API depends on how it's intended to be consumed. Public APIs are designed to be easily discovered and utilized by end-users. They may either be entirely public without authentication or meant for authenticated users only. The need for authentication in public APIs primarily hinges on the sensitivity of the handled data. If the API deals with public information exclusively, authentication might not be necessary. However, in most cases, some level of authentication is required. Public APIs typically come with documentation, serving as a user manual, which should be readily available and easy to comprehend.

Partner APIs are exclusively intended for use by the provider's partners. These APIs might be more challenging to discover unless you're a partner yourself. While documentation may exist for partner APIs, it's often restricted to partners only.

Private APIs are meant for internal use within an organization. Documentation for these APIs is usually limited or nonexistent, making them harder to discover.

In cases where API documentation is unavailable, knowledge of reverse engineering API requests becomes crucial. Reverse engineering will be covered in a follow-up module. For now, our focus is on detecting APIs and utilizing them based on discovered documentation.

Web API Indicators

APIs meant for consumer use are typically easy to discover. Providers often market their APIs to developers, making them accessible. Discovering APIs can be achieved by finding the API itself or its documentation. If you can find the target's API and documentation as an end-user, you've successfully discovered an API.

Another method to find a target's API is by exploring the target's landing page. Look for links to APIs or development portals. Several signs indicate the existence of a web API:

Obvious URL naming schemes: Look for patterns like /api, /api/v1, /v1, /v2, /v3, /rest, /swagger, /swagger.json, /doc, /docs, /graphql, /graphiql, /altair, /playground.
Subdomains: Subdomains like api.target-name.com, uat.target-name.com, dev.target-name.com, etc., can indicate web APIs.
HTTP request and response headers: JSON or XML content types (Content-Type: application/json, application/xml) in headers can indicate an API.
HTTP Responses: Statements like {"message": "Missing Authorization token"} in responses indicate an API.
Additionally, third-party sources like GitHub and API directories can provide valuable information:

GitHub: Explore repositories on GitHub (https://github.com/).
Postman Explore: Discover APIs on Postman (https://www.postman.com/explore/apis).
ProgrammableWeb API Directory: Browse APIs on ProgrammableWeb (https://www.programmableweb.com/apis/directory).
APIs Guru: Access API specifications on APIs Guru (https://apis.guru/).
Public APIs GitHub Project: Find public APIs on GitHub (https://github.com/public-apis/public-apis).
RapidAPI Hub: Search for APIs on RapidAPI (https://rapidapi.com/search/).
When searching for a target's APIs, utilize the target's web application as intended. Explore the web application using a browser to see if an API is advertised. Once you understand how the web app functions, delve deeper by employing passive and active reconnaissance techniques.
